// Generated by CoffeeScript 1.10.0
(function() {
  var Promise, _, deployArgs, exec, log, path, yargs;

  _ = require('lodash');

  yargs = require('yargs');

  path = require('path');

  Promise = require('rsvp').Promise;

  exec = require('child_process').exec;

  log = require('./log');

  deployArgs = yargs["default"]('sourceBranch', 'source')["default"]('deployBranch', 'master')["default"]('deployRemote', 'origin').argv;

  module.exports = {
    run: function(args) {
      _.extend(args, deployArgs);
      return new Promise(function(done, fail) {
        return exec("git status", function(err, out) {
          if (out.match(/working directory clean/)) {
            return done();
          } else {
            return fail("You must have a clean working directory to deploy.  Check the output of `git status`.");
          }
        });
      }).then(function() {
        return new Promise(function(done, fail) {
          log.debug("Building site...");
          return exec("fec build -c", function(err, out) {
            if (err) {
              return fail(err);
            } else {
              return done();
            }
          });
        });
      }).then(function() {
        return new Promise(function(done, fail) {
          return exec("git co " + args.deployBranch + " && sleep 0.1s; cp -R " + args.buildDir + "/* ./ && git add . && sleep 0.1s; git commit -m 'Update' && sleep 0.1s; git push " + args.deployRemote + " " + args.deployBranch, function(err, stdout) {
            if (err) {
              return exec("git clean -df && git co " + args.sourceBranch, function() {
                if (stdout.match(/nothing to commit/)) {
                  return fail("There were no changes since the last deploy");
                } else {
                  return fail([err, stdout].join('\n'));
                }
              });
            } else {
              return exec("git co " + args.sourceBranch, function() {
                log.debug(stdout);
                return done();
              });
            }
          });
        });
      }).then(function() {
        return log("Success!");
      }).then(null, function(err) {
        log.error("Error during deploy: " + err);
        log.error("Cleanup was attempted; you should make sure nothing is busted.");
        log.error("Specifically consider `git branch -f " + args.deployBranch + " " + args.deployBranch + "~`");
        return process.exit(1);
      });
    }
  };

}).call(this);
