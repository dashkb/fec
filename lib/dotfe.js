// Generated by CoffeeScript 1.7.1
(function() {
  var cfg, envfile, fs, loadConfig, log, path, readConfigFile, yaml;

  fs = require('fs');

  path = require('path');

  yaml = require('libyaml');

  envfile = require('envfile');

  log = require('./log');

  cfg = void 0;

  readConfigFile = function(dir) {
    var src;
    try {
      src = fs.readFileSync("" + dir + "/.fe").toString();
      log("Using .fe from " + dir);
      return src;
    } catch (_error) {
      if (dir !== '/') {
        if (dir !== '/') {
          return readConfigFile(path.resolve(dir, '../'));
        }
      } else {
        return log("No .fe found.  Consider creating one.");
      }
    }
  };

  loadConfig = function() {
    var e, parseFn, src;
    src = readConfigFile(process.cwd());
    if (src) {
      if (src.match(/^{/)) {
        parseFn = JSON.parse;
      } else if (src.match(/^---/ || src.match(/^%YAML/))) {
        parseFn = function(str) {
          return yaml.parse(str)[0];
        };
      } else {
        parseFn = envfile.parseSync;
      }
      try {
        return parseFn(src);
      } catch (_error) {
        e = _error;
        throw "Error parsing .fe: " + e + ".";
      }
    } else {
      return {};
    }
  };

  module.exports = {
    load: function() {
      return cfg || (cfg = loadConfig());
    }
  };

}).call(this);
