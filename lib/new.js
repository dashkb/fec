// Generated by CoffeeScript 1.7.1
(function() {
  var Promise, RSVP, copyAndLogAndResolve, createProjectDirectory, examplesPath, exec, fs, log, path, writeIndexPage, writeMainScript, writeMainStylesheet, writeMainTemplate, _;

  _ = require('lodash');

  path = require('path');

  RSVP = require('rsvp');

  Promise = RSVP.Promise;

  log = require('./log');

  fs = require('fs');

  exec = require('child_process').exec;

  examplesPath = "" + __dirname + "/../example";

  copyAndLogAndResolve = function(ctx, src, dest, done, fail) {
    return exec("cp " + src + " " + dest, function(err) {
      if (err) {
        return fail(err);
      } else {
        log("wrote " + dest);
        return done(ctx);
      }
    });
  };

  createProjectDirectory = function(ctx) {
    return new Promise(function(done, fail) {
      return fs.mkdir(ctx.srcDir, function(err) {
        if (err) {
          return fail(err);
        } else {
          log("created project directory " + ctx.srcDir);
          return done(ctx);
        }
      });
    });
  };

  writeMainTemplate = function(ctx) {
    return new Promise(function(done, fail) {
      var dest, src;
      src = "" + examplesPath + "/defaults/fe/fe.hamlc";
      dest = "" + ctx.srcDir + "/" + ctx.mainTemplate + ".hamlc";
      return copyAndLogAndResolve(ctx, src, dest, done, fail);
    });
  };

  writeMainStylesheet = function(ctx) {
    return new Promise(function(done, fail) {
      var dest, src;
      src = "" + examplesPath + "/defaults/fe/fe.less";
      dest = "" + ctx.srcDir + "/" + ctx.mainStylesheet + "." + ctx.cssPreprocessor;
      return copyAndLogAndResolve(ctx, src, dest, done, fail);
    });
  };

  writeMainScript = function(ctx) {
    return new Promise(function(done, fail) {
      var dest, src;
      src = "" + examplesPath + "/defaults/fe/fe.coffee";
      dest = "" + ctx.srcDir + "/" + ctx.mainScript;
      return copyAndLogAndResolve(ctx, src, dest, done, fail);
    });
  };

  writeIndexPage = function(ctx) {
    return new Promise(function(done, fail) {
      var dest, src;
      src = "" + examplesPath + "/defaults/fe/index.md";
      dest = "" + ctx.srcDir + "/index.md";
      return copyAndLogAndResolve(ctx, src, dest, done, fail);
    });
  };

  module.exports = {
    run: function(args) {
      return createProjectDirectory(args).then(function(ctx) {
        return RSVP.all([writeMainTemplate(ctx), writeMainStylesheet(ctx), writeMainScript(ctx), writeIndexPage(ctx)]);
      });
    }
  };

}).call(this);
